@model CreatePost
<style>
    table {
        width: 99%;
        border: 1px solid #999;
        margin: 0 auto;
        text-align: left;
        border-collapse: collapse;
        margin: 0 0 1em 0;
        caption-side: top;
    }

    caption, td, th {
        padding: 0.3em;
    }

    th, td {
        border-bottom: 1px solid #999;
        width: 7%;
    }

    caption {
        font-weight: bold;
        font-style: italic;
    }
    .noSearch.red {
    color:lightcoral;
    }
</style>
@{
    ViewData["Title"] = "S . G . D . E . AP Doc.";
}

<a style="float:left; width:auto; margin-left:10px;" class="Botones" asp-area="" asp-controller="Home" asp-action="DOCNew">New Doc.</a>
<div class="text-center">
    @if (Global.Mensaje != "" & Global.Mensaje != null)
    {
        @if (Global.Mensaje.ToString().Substring(0, 5) == "ERROR")
        {
            <p style="color:lightcoral">@Global.Mensaje </p>
        }
        else
        {
            <p style="color:lightgreen">@Global.Mensaje </p>
        }
    }
    <label>Search</label> <input id="searchTerm" type="text" onkeyup="doSearch()" />
    <br /><br />
    <h4>Documents AP</h4>
    <table id="datos" style="margin: 0 auto;">
        <tr>
            <th>DOC.</th>
            <th>ORIG.</th>
            <th>Num. Doc.</th>
            <th>Document</th>
            <th>Description</th>
            <th>ED.</th>
            <th>DATE</th>
            <th>Cod.</th>
            <th>TYPE</th>
            <th>STATE</th>
            <th>Press to Update</th>
        </tr>
        @foreach (var Docs in (List<Tipo_Documentos>)Metodos.SQL_ConsulaDocumentos("Select * from Documentos where EstadoEdicion='AP' order by xfec desc"))
        {
    <tr>
        <th class="noSearch">
            @if (Metodos.ExtensionArchivo(Docs.NombreArchivo) == ".doc" || Metodos.ExtensionArchivo(Docs.NombreArchivo) == ".docx")
            {
                <a target="_blank" href="~/Files/@Docs.EstadoEdicion/PDF/@Docs.NombreArchivo.Substring(0, Docs.NombreArchivo.Length + 1 - Metodos.ExtensionArchivo(Docs.NombreArchivo).Length)pdf" ;" title="PDF">
                    <img src="~/Images/PDF.gif" alt="PDF" />
                </a>
            }
        </th>
        <th class="noSearch">
            <a href='~/Files/@Docs.EstadoEdicion/DOC/@Docs.NombreArchivo'>
                <img src="~/Images/Word.gif" alt="DOC" />
            </a>
        </th>
        <td>@Docs.NumDoc</td>
        <td>@Docs.Documento</td>
        <td>@Docs.Descripcion</td>
        <td>@Docs.NumEdicion</td>
        <td>@Docs.Xfec</td>
        <td>@Docs.CodTipo</td>
        <td>@Docs.TipoDoc</td>
        <td>@Docs.EstadoEdicion</td>
        <th class="noSearch">
            <form class="form" asp-action="DOCUpdate2" enctype="multipart/form-data" name="CreatePost" method="post">
                <input asp-for="Documento" type="text" value="@Docs.Documento" hidden />
                <input asp-for="Descripcion" type="text" value="@Docs.Descripcion" hidden />
                <input asp-for="TipoDocumento" type="text" value="@Docs.TipoDoc" hidden />
                <input asp-for="CTipo" type="text" value="@Docs.CodTipo" hidden />
                <input asp-for="NumDoc" type="text" value="@Docs.NumDoc" hidden />
                <input asp-for="COD3" type="text" value="@Docs.COD3" hidden />
                <input asp-for="NumEdicion" type="number" value="@Docs.NumEdicion" hidden />
                <input asp-for="EstadoEdicion" type="text" value="@Docs.EstadoEdicion" hidden />
                <input asp-for="IdReg" type="text" value="@Docs.IdReg" hidden />
                <input asp-for="NombreArchivo" type="text" value="@Docs.NombreArchivo" hidden />
                <button type="submit" class="Botones">Update</button>
            </form>
        </th>
    </tr>
        }
        <tr class='noSearch hide'>
            <td colspan="12"></td>
        </tr>
    </table>
</div>
<script>
    document.getElementById("Contenedor").className = "no";
    function doSearch() {
        const tableReg = document.getElementById('datos');
        const searchText = document.getElementById('searchTerm').value.toLowerCase();
        let total = 0;

        // Recorremos todas las filas con contenido de la tabla
        for (let i = 1; i < tableReg.rows.length; i++) {
            // Si el td tiene la clase "noSearch" no se busca en su cntenido
            if (tableReg.rows[i].classList.contains("noSearch")) {
                continue;
            }

            let found = false;
            const cellsOfRow = tableReg.rows[i].getElementsByTagName('td');
            // Recorremos todas las celdas
            for (let j = 0; j < cellsOfRow.length && !found; j++) {
                const compareWith = cellsOfRow[j].innerHTML.toLowerCase();
                // Buscamos el texto en el contenido de la celda                
                if (searchText.length == 0 || compareWith.indexOf(searchText) > -1) {
                    found = true;
                    total++;
                }
            }
            if (found) {
                tableReg.rows[i].style.display = '';
            } else {
                // si no ha encontrado ninguna coincidencia, esconde la
                // fila de la tabla
                tableReg.rows[i].style.display = 'none';
            }
        }

        // mostramos las coincidencias
        const lastTR = tableReg.rows[tableReg.rows.length - 1];
        const td = lastTR.querySelector("td");
        lastTR.classList.remove("hide", "red");
        if (searchText == "") {
            lastTR.classList.add("hide");
        } else if (total) {
            td.innerHTML = total + " Matches found.";
        } else {
            lastTR.classList.add("red");
            td.innerHTML = "No matches found.";
        }
    }
</script>